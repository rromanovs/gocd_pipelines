---
format_version: 7
common:
  deploy-tasks: &deploy-tasks
    - exec:
        command: bash
        arguments:
          - -c 
          - echo "Deploy to ${ENV_NAME} environment"

  test-tasks: &test-tasks
    - exec:
        command: bash
        arguments:
          - -c 
          - echo "Running tests on ${ENV_NAME}" 
    - exec:
        command: bash
        arguments:
          - -c 
          - docker run --network=host -d -t --name api_test_executor${ENV_NAME} api_test_base_executor:latest
    - exec:
        command: bash
        arguments:
          - -c 
          - docker exec api_test_executor${ENV_NAME} cucumber --tags=@{ENV_NAME} --format html --out test-output/report.html
    - exec:
        command: bash
        arguments:
          - -c 
          - docker cp api_test_executor${ENV_NAME}:/usr/src/api-tests/test-output/report.html report_${ENV_NAME}.html
    - exec:
        command: bash
        arguments:
          - -c 
          - docker rm -f api_test_executor${ENV_NAME}

    
pipelines:
  java_microservice:
    group: microservices
    lock_behavior: unlockWhenFinished
    label_template: "${git_java_microservice}"
    materials:
      git_java_microservice:
        git: "https://github.com/rromanovs/api_tests_ci.git"
        branch: main
        shallow_clone: true
        auto_update: true
    stages:
      - build:
          jobs:
            build:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "Building Java app"
      - deploy-dev:
          environment_variables:
            ENV_NAME: dev
          jobs:
            deploy:
              tasks: *deploy-tasks
      - test-dev:
          environment_variables:
            ENV_NAME: dev
          jobs:
            test:
              artifacts:
                -build:
                  source: report_dev.html
                  destination: test-output
              tabs:
                Report: test-output/report_dev.html
              tasks: *test-tasks
      - deploy-int:
          environment_variables:
            ENV_NAME: int
          jobs:
            deploy:
              tasks: *deploy-tasks
      - test-int:
          environment_variables:
            ENV_NAME: int
          jobs:
            test:
              artifacts:
                -build:
                  source: report_int.html
                  destination: test-output
              tabs:
                Report: test-output/report_int.html
              tasks: *test-tasks
      - deploy-prd:
          environment_variables:
            ENV_NAME: prod
          jobs:
            deploy:
              tasks: *deploy-tasks
      - test-prd:
          environment_variables:
            ENV_NAME: prod
          jobs:
            test:
              artifacts:
                -build:
                  source: report_prod.html
                  destination: test-output
              tabs:
                Report: test-output/report_prod.html
              tasks: *test-tasks


